// for gRPC
buildscript {
    repositories {
        maven{
            url "$nexusURL"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.4.5")
    }
}

plugins {
	id "com.google.protobuf" version "0.8.16" // for gRPC
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

archivesBaseName = 'fo-order-api'
group = 'kyobobook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    maven{
        url "$nexusURL"
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.postgresql:postgresql:42.2.23'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

	// for gRPC
	implementation 'net.devh:grpc-server-spring-boot-starter:2.11.0.RELEASE'
    implementation 'net.devh:grpc-client-spring-boot-starter:2.11.0.RELEASE'

	implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.swagger:swagger-annotations:1.5.21'
    implementation 'io.swagger:swagger-models:1.5.21'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.3'

    // health check
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor('org.projectlombok:lombok:1.18.20')

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

// for gRPC
configurations.all {
    resolutionStrategy.eachDependency { details ->
        if ("io.grpc".equalsIgnoreCase(details.requested.group)) {
            details.useVersion '1.37.0'
        }
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/protoGen'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }

    clean {
        delete "$generatedFilesBaseDir/main/protoGen"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.37.0"
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java {
                    outputSubDir = 'protoGen'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'protoGen'
                }
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}

test {
	useJUnitPlatform()
}
