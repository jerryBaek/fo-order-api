server:
  port: 8080
  
spring:
  application:
    name: fo-order-api
  writer:
    datasource:
      jdbc-url: ${WRITER_DATASOURCE_JDBC_URL}
      username: ${WRITER_DATASOURCE_USERNAME}
      password: ${WRITER_DATASOURCE_PASSWORD}
      driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
  reader:
    datasource:
      jdbc-url: ${READER_DATASOURCE_JDBC_URL}
      username: ${READER_DATASOURCE_USERNAME}
      password: ${READER_DATASOURCE_PASSWORD}
      driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
  cache:
    type: redis
    redis:
      time-to-live: ${REDIS_CACHE_TTL}

  redis:
    host: ${REDIS_CACHE_HOST}
    port: ${REDIS_CACHE_PORT}
    password: ${REDIS_CACHE_PASSWORD}
    timeout: 10000
  data:
    mongodb:
      uri: ${DATA_MONGODB_URI}
      username: ${DATA_MONGODB_USERNAME}
      password: ${DATA_MONGODB_PASSWORD}
      database: ${DATA_MONGODB_DATABASE}
      authentication-database: ${DATA_MONGODB_AUTHENTICATION_DATABASE}

documentdb:
  ssl:
    invalidHostNameAllowed: ${DOCUMENTDB_SSL_INVALIDHOSTNAMEALLOWED}
    trustStore: ${DOCUMENTDB_SSL_TRUSTSTORE}
    truststorePassword: ${DOCUMENTDB_SSL_TRUSTSTOREPASSWORD}

gpring:
  application:
    name: fo-order-api
    
grpc:
  server:
    port: 8085
    maxInboundMessageSize: 15MB
  client:
    common-order-api:
      address: ${GRPC_CLIENT_COMMON_ORDER_API_ADDRESS}
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext

logging:
  level:
    root: ${LOG_LEVEL}